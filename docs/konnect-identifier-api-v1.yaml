openapi: '3.0.0'

info:
  version: '1.0.20181130'
  title: Konnect Identifier REST API
  contact:
    name: Kopano Developers
    email: development@kopano.com
  license:
    name: Apache License Version 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0

servers:
  - url: 'https://{hostnameWithPort}/signin/v1'
    variables:
      hostnameWithPort:
        default: localhost:8443
        description: Hostname and port to Konnect

tags:
  - name: identifier

paths:
  /identifier/_/logon:
    post:
      tags:
        - identifier
      description: Logon user
      operationId: logon
      requestBody:
        description: Logon request details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogonRequest'
      parameters:
        - in: header
          name: Kopano-Konnect-XSRF
          schema:
            type: number
            enum: [1]
          required: true
        - in: header
          name: Origin
          schema:
            type: string
            format: uri
        - in: header
          name: Referer
          schema:
            type: string
            format: uri
      responses:
        '200':
          description: Logon success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogonResponse'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: __Secure-KKT; Path=/signin/v1/identifier/_/; Secure; HttpOnly
        '204':
          description: Logon failed response
          headers:
            Kopano-Konnect-State:
              schema:
                type: string
        '400':
          description: Logon bad request response
  /identifier/_/logoff:
    post:
      tags:
        - identifier
      description: Logoff current user
      operationId: logoff
      requestBody:
        description: Logoff request state
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StateRequest'
      parameters:
        - in: header
          name: Kopano-Konnect-XSRF
          schema:
            type: number
            enum: [1]
          required: true
        - in: header
          name: Origin
          schema:
            type: string
            format: uri
        - in: header
          name: Referer
          schema:
            type: string
            format: uri
      responses:
        '200':
          description: Logoff response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateResponse'
        '400':
          description: Logoff bad request response
  /identifier/_/hello:
    post:
      tags:
        - identifier
      security:
        - cookieAuth: []
      description: Hello request
      operationId: hello
      requestBody:
        description: Hello request details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelloRequest'
      parameters:
        - in: header
          name: Kopano-Konnect-XSRF
          schema:
            type: number
            enum: [1]
          required: true
        - in: header
          name: Origin
          schema:
            type: string
            format: uri
        - in: header
          name: Referer
          schema:
            type: string
            format: uri
      responses:
        '200':
          description: Hello response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloResponse'
        '204':
          description: Hello failed response
          headers:
            Kopano-Konnect-State:
              schema:
                type: string
        '400':
          description: Hello bad request response
  /identifier/_/consent:
    post:
      tags:
        - identifier
      security:
        - cookieAuth: []
      description: Consent request
      operationId: consent
      requestBody:
        description: Consent request details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentRequest'
      parameters:
        - in: header
          name: Kopano-Konnect-XSRF
          schema:
            type: number
            enum: [1]
          required: true
        - in: header
          name: Origin
          schema:
            type: string
            format: uri
        - in: header
          name: Referer
          schema:
            type: string
            format: uri
      responses:
        '200':
          description: >
            Consent response.
            The consent details are returned as a cookie. The cookie name is a encrypted value containing consent request details. You need to include this cookie when a request requires previous consent.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateResponse'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: $EncryptedCookieName; Path=/signin/v1/identifier/_/; Secure; HttpOnly
        '204':
          description: Consent rejected response
          headers:
            Kopano-Konnect-State:
              schema:
                type: string
        '400':
          description: Consent bad request response

components:
  schemas:
    HelloRequest:
      required:
        - state
      properties:
        state:
          type: string
        flow:
          type: string
        scope:
          type: string
        prompt:
          type: string
        client_id:
          type: string
        redirect_uri:
          type: string
        id_token_hint:
          type: string
        max_age:
          type: string
    HelloResponse:
      required:
        - state
        - flow
        - success
      properties:
        state:
          type: string
        flow:
          type: string
        success:
          type: boolean
        username:
          type: string
        displayName:
          type: string
        next:
          type: string
        continue_uri:
          type: string
        scopes:
          $ref: '#/components/schemas/ScopesMap'
        client:
          $ref: '#/components/schemas/ClientDetails'
        meta:
          $ref: '#/components/schemas/Meta'
    ScopesMap:
      type: object
      additionalProperties:
        type: boolean
      example: {
        'scope1': true,
        'scope2': true
      }
    ClientDetails:
      required:
        - id
        - display_name
        - redirect_uri
        - trusted
      properties:
        id:
          type: string
        display_name:
          type: string
        redirect_uri:
          type: string
        trusted:
          type: boolean
    Meta:
      required:
        - scopes
      properties:
        scopes:
          $ref: '#/components/schemas/Scopes'
    Scopes:
      properties:
        mapping:
          type: object
          additionalProperties:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ScopesDefinition'
    ScopesDefinition:
      properties:
        priority:
          type: number
        description:
          type: string
    LogonRequest:
      required:
        - state
        - params
      properties:
        state:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/LogonRequestParams'
          example: [ $username, $password, $mode ]
        hello:
          $ref: '#/components/schemas/HelloRequest'
    LogonRequestParams:
      type: array
      items:
        type: string
      minItems: 3
    LogonResponse:
      required:
        - success
        - state
        - hello
      properties:
        success:
          type: boolean
        state:
          type: string
        hello:
          $ref: '#/components/schemas/HelloResponse'
    StateRequest:
      required:
        - state
      properties:
        state:
          type: string
    StateResponse:
      required:
        - success
        - state
      properties:
        success:
          type: boolean
        state:
          type: string
    ConsentRequest:
      required:
        - state
        - allow
        - scope
        - client_id
        - redirect_uri
      properties:
        state:
          type: string
        allow:
          type: boolean
        scope:
          type: string
        client_id:
          type: string
        redirect_uri:
          type: string
        ref:
          type: string
        flow_nonce:
          type: string

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: __Secure-KKT
